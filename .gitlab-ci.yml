# This file is a template, and might need editing before it works on your project.
# Official docker image.
image: docker:19.03

services:
  - docker:19.03.5-dind

variables:
  SSH_OPT: "-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"

stages:
  - test
  - build
  - deploy

before_script:
#  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
#  - eval $(ssh-agent -s)
#  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
#  - mkdir -p ~/.ssh
#  - chmod 700 ~/.ssh
#
#  - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
#  - chmod 644 ~/.ssh/known_hosts

  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

test:
  stage: test
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" -f Dockerfile.test .
    - docker run "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" npm run test:unit -- --passWithNoTests --coverage
  only:
    - merge_request

lint:
  stage: test
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" -f Dockerfile.test .
    - docker run "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" npm run lint
  only:
    - merge_request

build:
  stage: build
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME" -f nginx/Dockerfile .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME"
  only:
    - master
    - develop


#deploy-staging:
#  stage: deploy
#  script:
#    - set -e
#    - '> .env'
#    - echo "VERSION=$CI_PIPELINE_ID" >> .env
#    - echo "CI_PROJECT_NAMESPACE=$CI_PROJECT_NAMESPACE" >> .env
#    - echo "CI_PROJECT_NAME=$CI_PROJECT_NAME" >> .env
#    - echo "CI_REGISTRY=$CI_REGISTRY" >> .env
#    - echo "CI_COMMIT_REF_SLUG=$CI_COMMIT_REF_SLUG" >> .env
#
#    - export SSH_ADDRESS="$SSH_HOST_USER@$SSH_HOST_IP"
#
#    - ssh $SSH_ADDRESS "docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY"
#    - ssh $SSH_ADDRESS "mkdir -p /data/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME"
#
#    - scp ./.env $SSH_ADDRESS:/data/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/
#    - scp ./docker-compose.staging.yml $SSH_ADDRESS:/data/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/docker-compose.yml
#
#    - ssh $SSH_ADDRESS "cd /data/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/ && docker-compose pull"
#    - ssh $SSH_ADDRESS "cd /data/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/ && docker-compose up -d"
#    - ssh $SSH_ADDRESS "docker system prune -a -f"
#  only:
#    - develop